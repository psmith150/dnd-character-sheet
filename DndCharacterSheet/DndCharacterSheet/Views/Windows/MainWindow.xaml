<Window x:Class="DndCharacterSheet.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DndCharacterSheet.Views.Windows"
        xmlns:vms="clr-namespace:DndCharacterSheet.ViewModels"
        xmlns:valueConverters="clr-namespace:DndCharacterSheet.ValueConverters"
        xmlns:customControls="clr-namespace:DndCharacterSheet.Views.CustomControls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=vms:MainWindowViewModel}"
        Title="MainWindow" Height="700" Width="1280"
        Style="{StaticResource MainWindowStyle}">
    <Window.Resources>
        <valueConverters:ViewModelToViewConverter x:Key="ViewModelToViewConverter" />
        <valueConverters:TypeToBoolConverter x:Key="TypeToBoolConverter" />
        <valueConverters:BooleanToVisibilityConverter x:Key="TrueToVisibleConverter" />
    </Window.Resources>
    <Grid Background="{DynamicResource MainBackgroundColor}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid x:Name="MenuButtonGrid" Grid.Column="0" VerticalAlignment="Stretch" Background="{DynamicResource MainNavigationBarColor}">
            <Button Grid.Column="0" Height="25" Width="25" HorizontalAlignment="Left" VerticalAlignment="Top"
                    Command="{Binding ToggleMenuCommand}">
                <Button.Template>
                    <ControlTemplate>
                        <Image Source="{StaticResource ic_menu_18pxDrawingImage}" />
                    </ControlTemplate>
                </Button.Template>
            </Button>
        </Grid>
        <ContentPresenter Grid.Column="1" Content="{Binding NavigationService.ActiveViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
        <Grid Grid.Column="1" x:Name="MainMenuGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
              Visibility="{Binding MenuVisible, Converter={StaticResource TrueToVisibleConverter}}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <DockPanel Grid.Column="0" VerticalAlignment="Stretch" Background="{DynamicResource NavigationBarColor}" LastChildFill="True">
                <UniformGrid DockPanel.Dock="Top" VerticalAlignment="Top" Columns="1">
                    <UniformGrid.Style>
                        <Style TargetType="UniformGrid">
                            <Setter Property="Margin" Value="2 0 2 0"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding MenuVisible}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ThicknessAnimation  Storyboard.TargetProperty="Margin"
                                                         From="-130,0,2,0" To="2,0,2,0" Duration="0:0:0.075" AutoReverse="False" RepeatBehavior="1x" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </UniformGrid.Style>
                    <UniformGrid.Resources>
                        <Style TargetType="customControls:NavButton" BasedOn="{StaticResource CharacterSheetNavButton}">
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontSize" Value="{StaticResource NormalFontSize}"/>
                            <Setter Property="FontFamily" Value="Arial"/>
                            <Setter Property="Background" Value="{DynamicResource MainNavigationButtonBackgroundColor}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource MainNavigationButtonBorderColor}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                            <Setter Property="HoverBackgroundBrush" Value="{DynamicResource MainNavigationButtonBackgroundColor}"/>
                            <Setter Property="HoverForegroundBrush" Value="{DynamicResource TextColor}"/>
                            <Setter Property="DisabledBackgroundBrush" Value="{DynamicResource MainNavigationButtonSelectedBackgroundColor}"/>
                            <Setter Property="DisabledForegroundBrush" Value="{DynamicResource MainNavigationButtonSelectedForegroundColor}" />
                            <Setter Property="Margin" Value="2 5 2 5"/>
                            <Setter Property="Width" Value="130"/>
                            <Setter Property="Height" Value="40"/>
                        </Style>
                    </UniformGrid.Resources>
                    <customControls:NavButton Content="Characters" VerticalAlignment="Top" IsEnabled="{Binding NavigationService.ActiveViewModel, 
                        Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type vms:CharacterScreenViewModel}}"
                                      CommandParameter="{x:Type vms:CharacterScreenViewModel}" Command="{Binding NavigateToScreenCommand}"/>
                </UniformGrid>
                <customControls:NavButton DockPanel.Dock="Bottom" Content="About" VerticalAlignment="Top" Margin="2 0 2 5"
                                          IsEnabled="{Binding NavigationService.ActiveViewModel, 
                    Converter={StaticResource TypeToBoolConverter}, ConverterParameter={x:Type vms:CharacterScreenViewModel}}"/>
                <Rectangle Fill="Transparent"/>
            </DockPanel>
            <Grid Grid.Column="1" Style="{StaticResource OverlayGridStyle}" HorizontalAlignment="Stretch">
                <Button Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                        Command="{Binding ToggleMenuCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Rectangle Fill="Transparent"/>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </Grid>
        </Grid>
        <!-- Popup -->
        <Grid Background="Transparent" Visibility="{Binding NavigationService.IsPopupActive, Converter={StaticResource TrueToVisibleConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" 
                  Style="{StaticResource OverlayGridStyle}" />
            <ContentPresenter Grid.Row="1" Grid.Column="1" Content="{Binding NavigationService.ActivePopupViewModel, Converter={StaticResource ViewModelToViewConverter}}" />
        </Grid>
        <!-- Busy Window -->
        <Grid Background="Transparent" Visibility="{Binding Session.IsBusy, Converter={StaticResource TrueToVisibleConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Row="0" Grid.Column="0" Grid.RowSpan="3" Grid.ColumnSpan="3" Style="{StaticResource OverlayGridStyle}" />
            <Border Grid.Row="1" Grid.Column="1" Style="{StaticResource PopupBorderStyle}">
                <Grid Width="300" Height="200" Background="LightGray">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="2*" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding Session.BusyTitle}" TextWrapping="Wrap" HorizontalAlignment="Center"/>
                    <TextBlock Grid.Row="1" Text="{Binding Session.BusyMessage}" TextWrapping="Wrap"/>
                    <ProgressBar Grid.Row="2" IsIndeterminate="True" Height="25" Margin="10" />
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
